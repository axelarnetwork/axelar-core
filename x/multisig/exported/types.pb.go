// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: axelar/multisig/exported/v1beta1/types.proto

package exported

import (
	fmt "fmt"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type KeygenState int32

const (
	NonExistent KeygenState = 0
	Pending     KeygenState = 1
	Completed   KeygenState = 2
)

var KeygenState_name = map[int32]string{
	0: "KEYGEN_STATE_UNSPECIFIED",
	1: "KEYGEN_STATE_PENDING",
	2: "KEYGEN_STATE_COMPLETED",
}

var KeygenState_value = map[string]int32{
	"KEYGEN_STATE_UNSPECIFIED": 0,
	"KEYGEN_STATE_PENDING":     1,
	"KEYGEN_STATE_COMPLETED":   2,
}

func (x KeygenState) String() string {
	return proto.EnumName(KeygenState_name, int32(x))
}

func (KeygenState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_b14433678c926388, []int{0}
}

func init() {
	proto.RegisterEnum("axelar.multisig.exported.v1beta1.KeygenState", KeygenState_name, KeygenState_value)
}

func init() {
	proto.RegisterFile("axelar/multisig/exported/v1beta1/types.proto", fileDescriptor_b14433678c926388)
}

var fileDescriptor_b14433678c926388 = []byte{
	// 300 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x49, 0xac, 0x48, 0xcd,
	0x49, 0x2c, 0xd2, 0xcf, 0x2d, 0xcd, 0x29, 0xc9, 0x2c, 0xce, 0x4c, 0xd7, 0x4f, 0xad, 0x28, 0xc8,
	0x2f, 0x2a, 0x49, 0x4d, 0xd1, 0x2f, 0x33, 0x4c, 0x4a, 0x2d, 0x49, 0x34, 0xd4, 0x2f, 0xa9, 0x2c,
	0x48, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x52, 0x80, 0xa8, 0xd6, 0x83, 0xa9, 0xd6,
	0x83, 0xa9, 0xd6, 0x83, 0xaa, 0x96, 0x12, 0x49, 0xcf, 0x4f, 0xcf, 0x07, 0x2b, 0xd6, 0x07, 0xb1,
	0x20, 0xfa, 0xb4, 0x66, 0x30, 0x72, 0x71, 0x7b, 0xa7, 0x56, 0xa6, 0xa7, 0xe6, 0x05, 0x97, 0x24,
	0x96, 0xa4, 0x0a, 0xe9, 0x72, 0x49, 0x78, 0xbb, 0x46, 0xba, 0xbb, 0xfa, 0xc5, 0x07, 0x87, 0x38,
	0x86, 0xb8, 0xc6, 0x87, 0xfa, 0x05, 0x07, 0xb8, 0x3a, 0x7b, 0xba, 0x79, 0xba, 0xba, 0x08, 0x30,
	0x48, 0xf1, 0x77, 0xcd, 0x55, 0xe0, 0xf6, 0xcb, 0xcf, 0x73, 0xad, 0xc8, 0x2c, 0x2e, 0x49, 0xcd,
	0x2b, 0x11, 0x52, 0xe5, 0x12, 0x41, 0x51, 0x1e, 0xe0, 0xea, 0xe7, 0xe2, 0xe9, 0xe7, 0x2e, 0xc0,
	0x28, 0xc5, 0xdd, 0x35, 0x57, 0x81, 0x3d, 0x20, 0x35, 0x2f, 0x25, 0x33, 0x2f, 0x5d, 0x48, 0x93,
	0x4b, 0x0c, 0x45, 0x99, 0xb3, 0xbf, 0x6f, 0x80, 0x8f, 0x6b, 0x88, 0xab, 0x8b, 0x00, 0x93, 0x14,
	0x6f, 0xd7, 0x5c, 0x05, 0x4e, 0xe7, 0xfc, 0xdc, 0x82, 0x9c, 0xd4, 0x92, 0xd4, 0x14, 0x29, 0x8e,
	0x8e, 0xc5, 0x72, 0x0c, 0x2b, 0x96, 0xc8, 0x31, 0x3a, 0x85, 0x9d, 0x78, 0x28, 0xc7, 0x70, 0xe2,
	0x91, 0x1c, 0xe3, 0x85, 0x47, 0x72, 0x8c, 0x0f, 0x1e, 0xc9, 0x31, 0x4e, 0x78, 0x2c, 0xc7, 0x70,
	0xe1, 0xb1, 0x1c, 0xc3, 0x8d, 0xc7, 0x72, 0x0c, 0x51, 0x16, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49,
	0x7a, 0xc9, 0xf9, 0xb9, 0xfa, 0x10, 0xbf, 0xe7, 0xa5, 0x96, 0x94, 0xe7, 0x17, 0x65, 0x43, 0x79,
	0xba, 0xc9, 0xf9, 0x45, 0xa9, 0xfa, 0x15, 0x98, 0xc1, 0x97, 0xc4, 0x06, 0xf6, 0xb9, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0x01, 0x89, 0x75, 0xc0, 0x61, 0x01, 0x00, 0x00,
}
