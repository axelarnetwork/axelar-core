// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: snapshot/v1beta1/types.proto

package types

import (
	fmt "fmt"
	github_com_cosmos_cosmos_sdk_types "github.com/cosmos/cosmos-sdk/types"
	_ "github.com/gogo/protobuf/gogoproto"
	proto "github.com/gogo/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type ValidatorProxy struct {
	Validator github_com_cosmos_cosmos_sdk_types.ValAddress `protobuf:"bytes,1,opt,name=validator,proto3,casttype=github.com/cosmos/cosmos-sdk/types.ValAddress" json:"validator,omitempty"`
	Proxy     github_com_cosmos_cosmos_sdk_types.AccAddress `protobuf:"bytes,2,opt,name=proxy,proto3,casttype=github.com/cosmos/cosmos-sdk/types.AccAddress" json:"proxy,omitempty"`
	Active    bool                                          `protobuf:"varint,3,opt,name=active,proto3" json:"active,omitempty"`
}

func (m *ValidatorProxy) Reset()         { *m = ValidatorProxy{} }
func (m *ValidatorProxy) String() string { return proto.CompactTextString(m) }
func (*ValidatorProxy) ProtoMessage()    {}
func (*ValidatorProxy) Descriptor() ([]byte, []int) {
	return fileDescriptor_299d0fdbe3a31474, []int{0}
}
func (m *ValidatorProxy) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *ValidatorProxy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_ValidatorProxy.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *ValidatorProxy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ValidatorProxy.Merge(m, src)
}
func (m *ValidatorProxy) XXX_Size() int {
	return m.Size()
}
func (m *ValidatorProxy) XXX_DiscardUnknown() {
	xxx_messageInfo_ValidatorProxy.DiscardUnknown(m)
}

var xxx_messageInfo_ValidatorProxy proto.InternalMessageInfo

func init() {
	proto.RegisterType((*ValidatorProxy)(nil), "snapshot.v1beta1.ValidatorProxy")
}

func init() { proto.RegisterFile("snapshot/v1beta1/types.proto", fileDescriptor_299d0fdbe3a31474) }

var fileDescriptor_299d0fdbe3a31474 = []byte{
	// 281 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x90, 0xb1, 0x4e, 0xc3, 0x30,
	0x14, 0x45, 0x63, 0x10, 0x15, 0x44, 0x08, 0xa1, 0x08, 0xa1, 0xa8, 0xaa, 0x4c, 0xc5, 0xd4, 0x25,
	0xb1, 0x22, 0xc4, 0x07, 0xb4, 0x0b, 0x23, 0xa8, 0x48, 0x1d, 0xd8, 0x5e, 0x1c, 0x2b, 0x8d, 0x9a,
	0xe6, 0x59, 0xb6, 0x09, 0xe9, 0x5f, 0xf0, 0x4d, 0x4c, 0x1d, 0x3b, 0x32, 0x21, 0x48, 0xfe, 0x82,
	0x09, 0x35, 0x75, 0x80, 0xb5, 0x93, 0x7d, 0x7d, 0xfd, 0xce, 0x7d, 0xba, 0xee, 0x40, 0x17, 0x20,
	0xf5, 0x1c, 0x0d, 0x2b, 0xa3, 0x58, 0x18, 0x88, 0x98, 0x59, 0x49, 0xa1, 0x43, 0xa9, 0xd0, 0xa0,
	0x77, 0xde, 0xb9, 0xa1, 0x75, 0xfb, 0x17, 0x29, 0xa6, 0xd8, 0x9a, 0x6c, 0x7b, 0xdb, 0xfd, 0xeb,
	0x0f, 0x52, 0xc4, 0x34, 0x17, 0x0c, 0x64, 0xc6, 0xa0, 0x28, 0xd0, 0x80, 0xc9, 0xb0, 0xb0, 0x94,
	0xeb, 0x37, 0xe2, 0x9e, 0xcd, 0x20, 0xcf, 0x12, 0x30, 0xa8, 0x1e, 0x14, 0x56, 0x2b, 0xef, 0xde,
	0x3d, 0x29, 0xbb, 0x17, 0x9f, 0x0c, 0xc9, 0xe8, 0x74, 0x12, 0x7d, 0x7f, 0x5c, 0x05, 0x69, 0x66,
	0xe6, 0xcf, 0x71, 0xc8, 0x71, 0xc9, 0x38, 0xea, 0x25, 0x6a, 0x7b, 0x04, 0x3a, 0x59, 0xd8, 0xcd,
	0x66, 0x90, 0x8f, 0x93, 0x44, 0x09, 0xad, 0xa7, 0x7f, 0x0c, 0xef, 0xce, 0x3d, 0x92, 0x5b, 0xb2,
	0x7f, 0xb0, 0x17, 0x6c, 0xcc, 0x79, 0x07, 0xdb, 0xcd, 0x7b, 0x97, 0x6e, 0x0f, 0xb8, 0xc9, 0x4a,
	0xe1, 0x1f, 0x0e, 0xc9, 0xe8, 0x78, 0x6a, 0xd5, 0xe4, 0x71, 0xfd, 0x45, 0x9d, 0x75, 0x4d, 0xc9,
	0xa6, 0xa6, 0xe4, 0xb3, 0xa6, 0xe4, 0xb5, 0xa1, 0xce, 0xa6, 0xa1, 0xce, 0x7b, 0x43, 0x9d, 0xa7,
	0xdb, 0x7f, 0x59, 0x50, 0x89, 0x1c, 0x54, 0x21, 0xcc, 0x0b, 0xaa, 0x85, 0x55, 0x01, 0x47, 0x25,
	0x58, 0xc5, 0x7e, 0xdb, 0x6e, 0xe3, 0xe3, 0x5e, 0x5b, 0xd0, 0xcd, 0x4f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0xef, 0x5d, 0xc0, 0x62, 0x86, 0x01, 0x00, 0x00,
}

func (m *ValidatorProxy) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *ValidatorProxy) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *ValidatorProxy) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.Active {
		i--
		if m.Active {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x18
	}
	if len(m.Proxy) > 0 {
		i -= len(m.Proxy)
		copy(dAtA[i:], m.Proxy)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Proxy)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Validator) > 0 {
		i -= len(m.Validator)
		copy(dAtA[i:], m.Validator)
		i = encodeVarintTypes(dAtA, i, uint64(len(m.Validator)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintTypes(dAtA []byte, offset int, v uint64) int {
	offset -= sovTypes(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *ValidatorProxy) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Validator)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	l = len(m.Proxy)
	if l > 0 {
		n += 1 + l + sovTypes(uint64(l))
	}
	if m.Active {
		n += 2
	}
	return n
}

func sovTypes(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozTypes(x uint64) (n int) {
	return sovTypes(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *ValidatorProxy) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: ValidatorProxy: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: ValidatorProxy: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Validator", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Validator = append(m.Validator[:0], dAtA[iNdEx:postIndex]...)
			if m.Validator == nil {
				m.Validator = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Proxy", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthTypes
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthTypes
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Proxy = append(m.Proxy[:0], dAtA[iNdEx:postIndex]...)
			if m.Proxy == nil {
				m.Proxy = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Active", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Active = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipTypes(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthTypes
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipTypes(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowTypes
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowTypes
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthTypes
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupTypes
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthTypes
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthTypes        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowTypes          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupTypes = fmt.Errorf("proto: unexpected end of group")
)
