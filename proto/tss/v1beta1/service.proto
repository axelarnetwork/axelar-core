syntax = "proto3";
package tss.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/tss/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "snapshot/v1beta1/tx.proto";
import "tss/v1beta1/tx.proto";

option (gogoproto.goproto_registration) = true;

// Msg defines the tss Msg service.
service MsgService {
  rpc RegisterExternalKeys(tss.v1beta1.RegisterExternalKeysRequest)
      returns (tss.v1beta1.RegisterExternalKeysResponse) {
    option (google.api.http) = {
      post : "/axelar/tss/register-external-key"
      body : "*"
    };
  }

  rpc HeartBeat(tss.v1beta1.HeartBeatRequest)
      returns (tss.v1beta1.HeartBeatResponse) {
    option (google.api.http) = {
      post : "/axelar/tss/heartbeat"
      body : "*"
    };
  }

  rpc StartKeygen(tss.v1beta1.StartKeygenRequest)
      returns (tss.v1beta1.StartKeygenResponse) {
    option (google.api.http) = {
      post : "/axelar/tss/startKeygen"
      body : "*"
    };
  }

  rpc ProcessKeygenTraffic(tss.v1beta1.ProcessKeygenTrafficRequest)
      returns (tss.v1beta1.ProcessKeygenTrafficResponse) {
    option (google.api.http) = {
    };
  }

  rpc RotateKey(tss.v1beta1.RotateKeyRequest)
      returns (tss.v1beta1.RotateKeyResponse) {
    option (google.api.http) = {
      post : "/axelar/tss/assign/{chain}"
      body : "*"
    };
  }

  rpc VotePubKey(tss.v1beta1.VotePubKeyRequest)
      returns (tss.v1beta1.VotePubKeyResponse) {
    option (google.api.http) = {
    };
  };

  rpc ProcessSignTraffic(tss.v1beta1.ProcessSignTrafficRequest)
      returns (tss.v1beta1.ProcessSignTrafficResponse) {
    option (google.api.http) = {
    };
  }

  rpc VoteSig(tss.v1beta1.VoteSigRequest)
      returns (tss.v1beta1.VoteSigResponse) {
    option (google.api.http) = {
    };
  }

  rpc SubmitMultisigPubKeys(tss.v1beta1.SubmitMultisigPubKeysRequest)
      returns (tss.v1beta1.SubmitMultisigPubKeysResponse) {
    option (google.api.http) = {
    };
  }
}
