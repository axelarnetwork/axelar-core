syntax = "proto3";
package bitcoin.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/bitcoin/types";

import "bitcoin/v1beta1/types.proto";
import "vote/exported/v1beta1/types.proto";
import "gogoproto/gogo.proto";

option (gogoproto.goproto_getters_all) = false;

// MsgConfirmOutpoint represents a message to trigger the confirmation of a
// Bitcoin outpoint
message MsgConfirmOutpoint {
  bytes sender = 1 [ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  OutPointInfo out_point_info = 2 [ (gogoproto.nullable) = false ];
}

// MsgLink represents a message to link a cross-chain address to a Bitcoin
// address
message MsgLink {
  bytes sender = 1 [ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  string recipient_addr = 2;
  string recipient_chain = 3;
}

// MsgSignPendingTransfers represents a message to trigger the signing of a
// consolidation transaction
message MsgSignPendingTransfers {
  bytes sender = 1 [ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  // TODO: Remove once c2d2 is ready to perform child-pay-for-parent for
  // consolidation transactions
  int64 fee = 2 [ deprecated = true ];
}

// MsgVoteConfirmOutpoint represents a message to that votes on an outpoint
message MsgVoteConfirmOutpoint {
  bytes sender = 1 [ (gogoproto.casttype) =
                         "github.com/cosmos/cosmos-sdk/types.AccAddress" ];
  vote.exported.v1beta1.PollMeta poll = 2 [ (gogoproto.nullable) = false ];
  string out_point = 3;
  bool confirmed = 4;
}
