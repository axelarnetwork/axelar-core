syntax = "proto3";
package snapshot.exported.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/snapshot/exported";

import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/any.proto";
import "cosmos/base/v1beta1/coin.proto";
import "tss/exported/v1beta1/types.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/staking/v1beta1/staking.proto";

option (gogoproto.goproto_getters_all) = false;

message Validator {
  google.protobuf.Any sdk_validator = 1 [
    (cosmos_proto.accepts_interface) = "exported.SDKValidator",
    (gogoproto.customname) = "SDKValidator"
  ];
  int64 share_count = 2;
}

message Snapshot {
  repeated Validator validators = 1 [ (gogoproto.nullable) = false ];
  google.protobuf.Timestamp timestamp = 2
      [ (gogoproto.nullable) = false, (gogoproto.stdtime) = true ];
  int64 height = 3;
  bytes total_share_count = 4 [
    (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int",
    (gogoproto.nullable) = false
  ];
  int64 counter = 5;
  tss.exported.v1beta1.KeyShareDistributionPolicy
      key_share_distribution_policy = 6;
  int64 corruption_threshold = 7;
}

enum ValidatorIllegibility {
  option (gogoproto.goproto_enum_prefix) = false;
  option (gogoproto.goproto_enum_stringer) = false;

  VALIDATOR_ILLEGIBILITY_UNSPECIFIED = 0
      [ (gogoproto.enumvalue_customname) = "Unspecified" ];
  VALIDATOR_ILLEGIBILITY_TOMBSTONED = 1
      [ (gogoproto.enumvalue_customname) = "Tombstoned" ];
  VALIDATOR_ILLEGIBILITY_JAILED = 2
      [ (gogoproto.enumvalue_customname) = "Jailed" ];
  VALIDATOR_ILLEGIBILITY_MISSED_TOO_MANY_BLOCKS = 3
      [ (gogoproto.enumvalue_customname) = "MissedTooManyBlocks" ];
  VALIDATOR_ILLEGIBILITY_NO_PROXY_REGISTERED = 4
      [ (gogoproto.enumvalue_customname) = "NoProxyRegistered" ];
  VALIDATOR_ILLEGIBILITY_TSS_SUSPENDED = 5
      [ (gogoproto.enumvalue_customname) = "TssSuspended" ];
}

message ValidatorInfo {
  bool tombstoned = 1;
  bool jailed = 2;
  bool missed_too_many_blocks = 3;
  bool has_proxy_registered = 4;
  bool tss_suspended = 5;
}
