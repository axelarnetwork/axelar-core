syntax = "proto3";
package axelar.multisig.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/multisig/types";

import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "axelar/utils/v1beta1/threshold.proto";
import "axelar/snapshot/exported/v1beta1/types.proto";
import "axelar/multisig/exported/v1beta1/types.proto";

message Key {
  option (gogoproto.stable_marshaler) = true;

  string id = 1 [
    (gogoproto.customname) = "ID",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID"
  ];
  snapshot.exported.v1beta1.Snapshot snapshot = 2
      [ (gogoproto.nullable) = false ];
  map<string, bytes> pub_keys = 3 [ (gogoproto.castvalue) = "PublicKey" ];
  utils.v1beta1.Threshold signing_threshold = 5
      [ (gogoproto.nullable) = false ];
}

message KeygenSession {
  option (gogoproto.stable_marshaler) = true;

  Key key = 1 [ (gogoproto.nullable) = false ];
  multisig.exported.v1beta1.MultisigState state = 2;
  utils.v1beta1.Threshold keygen_threshold = 3 [ (gogoproto.nullable) = false ];
  int64 expires_at = 4;
  int64 completed_at = 5;
  map<string, bool> is_pub_key_received = 6;
  int64 grace_period = 7;
}

message MultiSig {
  option (gogoproto.stable_marshaler) = true;

  uint64 id = 1 [ (gogoproto.customname) = "ID" ];
  string key_id = 2 [
    (gogoproto.customname) = "KeyID",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/multisig/exported.KeyID"
  ];
  bytes payload_hash = 3 [ (gogoproto.casttype) = "Hash" ];
  map<string, bytes> sigs = 4 [ (gogoproto.castvalue) = "Signature" ];
  string module = 5;
  google.protobuf.Any module_metadata = 6
      [ (cosmos_proto.accepts_interface) =
            "github.com/cosmos/codec/ProtoMarshaler" ];
}

message SigningSession {
  option (gogoproto.stable_marshaler) = true;

  MultiSig multi_sig = 1 [ (gogoproto.nullable) = false ];
  multisig.exported.v1beta1.MultisigState state = 2;
  Key key = 3 [ (gogoproto.nullable) = false ];
  int64 expires_at = 4;
  int64 completed_at = 5;
  int64 grace_period = 6;
}
