syntax = "proto3";
package axelar.tss.exported.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/tss/exported";

import "google/protobuf/any.proto";
import "google/protobuf/timestamp.proto";
import "cosmos_proto/cosmos.proto";
import "axelar/utils/v1beta1/threshold.proto";
import "gogoproto/gogo.proto";

// KeyRequirement defines requirements for keys
message KeyRequirement {
  KeyRole key_role = 1;
  KeyType key_type = 2;
  utils.v1beta1.Threshold min_keygen_threshold = 3
      [ (gogoproto.nullable) = false ];
  utils.v1beta1.Threshold safety_threshold = 4 [ (gogoproto.nullable) = false ];
  KeyShareDistributionPolicy key_share_distribution_policy = 5;
  int64 max_total_share_count = 6;
  int64 min_total_share_count = 7;
  utils.v1beta1.Threshold keygen_voting_threshold = 8
      [ (gogoproto.nullable) = false ];
  utils.v1beta1.Threshold sign_voting_threshold = 9
      [ (gogoproto.nullable) = false ];
  int64 keygen_timeout = 10;
  int64 sign_timeout = 11;
}

enum KeyRole {
  option (gogoproto.goproto_enum_prefix) = false;
  option (gogoproto.goproto_enum_stringer) = true;

  KEY_ROLE_UNSPECIFIED = 0 [ (gogoproto.enumvalue_customname) = "Unknown" ];
  KEY_ROLE_MASTER_KEY = 1 [ (gogoproto.enumvalue_customname) = "MasterKey" ];
  KEY_ROLE_SECONDARY_KEY = 2
      [ (gogoproto.enumvalue_customname) = "SecondaryKey" ];
  KEY_ROLE_EXTERNAL_KEY = 3
      [ (gogoproto.enumvalue_customname) = "ExternalKey" ];
}

enum KeyType {
  option (gogoproto.goproto_enum_prefix) = false;
  option (gogoproto.goproto_enum_stringer) = true;

  KEY_TYPE_UNSPECIFIED = 0;
  KEY_TYPE_NONE = 1 [ (gogoproto.enumvalue_customname) = "None" ];
  KEY_TYPE_THRESHOLD = 2 [ (gogoproto.enumvalue_customname) = "Threshold" ];
  KEY_TYPE_MULTISIG = 3 [ (gogoproto.enumvalue_customname) = "Multisig" ];
}

enum KeyShareDistributionPolicy {
  option (gogoproto.goproto_enum_prefix) = false;
  option (gogoproto.goproto_enum_stringer) = true;

  KEY_SHARE_DISTRIBUTION_POLICY_UNSPECIFIED = 0
      [ (gogoproto.enumvalue_customname) = "Unspecified" ];
  KEY_SHARE_DISTRIBUTION_POLICY_WEIGHTED_BY_STAKE = 1
      [ (gogoproto.enumvalue_customname) = "WeightedByStake" ];
  KEY_SHARE_DISTRIBUTION_POLICY_ONE_PER_VALIDATOR = 2
      [ (gogoproto.enumvalue_customname) = "OnePerValidator" ];
}

// PubKeyInfo holds a pubkey and a signature
message SigKeyPair {
  bytes pub_key = 1;
  bytes signature = 2;
}
