syntax = "proto3";
package axelar.nexus.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/nexus/types";
option (gogoproto.messagename_all) = true;

import "google/protobuf/duration.proto";
import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "axelar/nexus/exported/v1beta1/types.proto";

message FeeDeducted {
  uint64 transfer_id = 1 [
    (gogoproto.customname) = "TransferID",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/nexus/exported.TransferID"
  ];
  string recipient_chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string recipient_address = 3;
  cosmos.base.v1beta1.Coin amount = 4 [ (gogoproto.nullable) = false ];
  cosmos.base.v1beta1.Coin fee = 5 [ (gogoproto.nullable) = false ];
}

message InsufficientFee {
  uint64 transfer_id = 1 [
    (gogoproto.customname) = "TransferID",
    (gogoproto.casttype) =
        "github.com/axelarnetwork/axelar-core/x/nexus/exported.TransferID"
  ];
  string recipient_chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  string recipient_address = 3;
  cosmos.base.v1beta1.Coin amount = 4 [ (gogoproto.nullable) = false ];
  cosmos.base.v1beta1.Coin fee = 5 [ (gogoproto.nullable) = false ];
}

message RateLimitUpdated {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  cosmos.base.v1beta1.Coin limit = 2 [ (gogoproto.nullable) = false ];
  google.protobuf.Duration window = 3
      [ (gogoproto.stdduration) = true, (gogoproto.nullable) = false ];
}

message MessageReceived {
  string id = 1 [ (gogoproto.customname) = "ID" ];
  bytes payload_hash = 2;
  exported.v1beta1.CrossChainAddress sender = 3
      [ (gogoproto.nullable) = false ];
  exported.v1beta1.CrossChainAddress recipient = 4
      [ (gogoproto.nullable) = false ];
}

message MessageProcessing { string id = 1 [ (gogoproto.customname) = "ID" ]; }

message MessageExecuted { string id = 1 [ (gogoproto.customname) = "ID" ]; }

message MessageFailed { string id = 1 [ (gogoproto.customname) = "ID" ]; }

message WasmMessageRouted {
  exported.v1beta1.WasmMessage message = 1 [ (gogoproto.nullable) = false ];
}
