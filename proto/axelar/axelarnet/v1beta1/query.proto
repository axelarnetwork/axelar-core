syntax = "proto3";
package axelar.axelarnet.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/axelarnet/types";

import "gogoproto/gogo.proto";
import "axelar/axelarnet/v1beta1/types.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "axelar/nexus/v1beta1/query.proto";
import "axelar/axelarnet/v1beta1/params.proto";

option (gogoproto.goproto_getters_all) = false;

message PendingIBCTransferCountRequest {}

message PendingIBCTransferCountResponse {
  map<string, uint32> transfers_by_chain = 1 [ (gogoproto.nullable) = false ];
}

// ParamsRequest represents a message that queries the params
message ParamsRequest {}

message ParamsResponse { Params params = 1 [ (gogoproto.nullable) = false ]; }

enum ChainStatus {
  option (gogoproto.goproto_enum_prefix) = false;

  CHAIN_STATUS_UNSPECIFIED = 0
      [ (gogoproto.enumvalue_customname) = "StatusUnspecified" ];
  CHAIN_STATUS_ACTIVATED = 1 [ (gogoproto.enumvalue_customname) = "Activated" ];
  CHAIN_STATUS_DEACTIVATED = 2
      [ (gogoproto.enumvalue_customname) = "Deactivated" ];
}

// ChainsRequest represents a message that queries all registered cosmos chains
// by status
message ChainsRequest { ChainStatus status = 1; }

message ChainsResponse {
  repeated string chains = 1
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
}

// IBCPathRequest represents a message that queries the IBC path registered for
// a given chain
message IBCPathRequest { string chain = 1; }

message IBCPathResponse { string ibc_path = 1 [ (gogoproto.customname) = "IBCPath" ]; }

// ChainByIBCPathRequest represents a message that queries the chain that an IBC
// path is registered to
message ChainByIBCPathRequest { string ibc_path = 1; }

message ChainByIBCPathResponse {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
}
