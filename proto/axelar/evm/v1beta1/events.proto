syntax = "proto3";
package axelar.evm.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/evm/types";

import "gogoproto/gogo.proto";

message ConfirmKeyTransfer {
  string chain = 1
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  bytes tx_id = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.customtype) = "Hash",
    (gogoproto.customname) = "TxID"
  ];
  bytes gateway_address = 3
      [ (gogoproto.nullable) = false, (gogoproto.customtype) = "Address" ];
  uint64 confirmation_height = 4;
  uint64 poll_id = 5 [
    (gogoproto.nullable) = false,
    (gogoproto.customname) = "PollID",
    (gogoproto.customtype) =
        "github.com/axelarnetwork/axelar-core/x/vote/exported.PollID"
  ];
}

message PollFailed {
  string tx_id = 1 [ (gogoproto.customname) = "TxID" ];
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  uint64 poll_id = 3 [
    (gogoproto.customname) = "PollID",
    (gogoproto.customtype) =
        "github.com/axelarnetwork/axelar-core/x/vote/exported.PollID",
    (gogoproto.nullable) = false
  ];
}

message PollExpired {
  string tx_id = 1 [ (gogoproto.customname) = "TxID" ];
  string chain = 2
      [ (gogoproto.casttype) =
            "github.com/axelarnetwork/axelar-core/x/nexus/exported.ChainName" ];
  uint64 poll_id = 3 [
    (gogoproto.customname) = "PollID",
    (gogoproto.customtype) =
        "github.com/axelarnetwork/axelar-core/x/vote/exported.PollID",
    (gogoproto.nullable) = false
  ];
}
