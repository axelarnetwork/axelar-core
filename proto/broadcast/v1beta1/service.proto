syntax = "proto3";
package broadcast.v1beta1;

option go_package = "github.com/axelarnetwork/axelar-core/x/broadcast/types";

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "broadcast/v1beta1/tx.proto";

option (gogoproto.goproto_registration) = true;

// Msg defines the broadcast Msg service.
service MsgService {

  // RegisterProxy defines a method for registering a proxy account that can act
  // in a validator account's stead.
  rpc RegisterProxy(RegisterProxyRequest) returns (RegisterProxyResponse) {
    option (google.api.http) = {
      post : "/axelar/broadcast/registerProxy/{proxy_addr}"
      body : "*"
    };
  }

  // DeregisterProxy defines a method for deregistering a proxy account.
  rpc DeregisterProxy(DeregisterProxyRequest)
      returns (DeregisterProxyResponse) {
    option (google.api.http) = {
      post : "/axelar/broadcast/deregisterProxy"
      body : "*"
    };
  }
}
