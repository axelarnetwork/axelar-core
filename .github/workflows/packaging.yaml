name: Package linux binaries 

on:
  push:
    branches:
      - "feat/add-binaries-packaging"

jobs:
  package-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        version : [0.10.7, 0.13.6, 0.14.1, 0.15.0, 0.16.1, 0.17.3, 0.18.3, 0.19.4, 0.21.1, 0.24.0, 0.26.5, 0.28.0, 0.29.1, 0.31.2]
        arch: [amd64]

    permissions:
      contents: write
      packages: write
      id-token: write

    steps:

      - name: Configure AWS credentials
        run: |
          cd $HOME; mkdir ~/.aws; touch ~/.aws/credentials; touch ~/.aws/config
          echo "[default]
          aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID_CF }}
          aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY_CF }}" > ~/.aws/credentials
          echo "[default]
          region=auto
          output=json"  > ~/.aws/config
          
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          submodules: recursive

      - name: Install prerequisites
        run: |
          sudo apt-get install -y gcc dpkg-dev gpg

      - name: Create folder structures for Linux
        run: |
          mkdir -p ~/linux/axelard_${{ matrix.version }}-1_amd64/usr/bin/
          mkdir -p ~/linux/axelard_${{ matrix.version }}-1_amd64/DEBIAN/
          mkdir -p ~/linux/axelard_${{ matrix.version }}-1_arm64/usr/bin/
          mkdir -p ~/linux/axelard_${{ matrix.version }}-1_arm64/DEBIAN/
          mkdir -p ~/linux/axelard_${{ matrix.version }}-1_arm/usr/bin/
          mkdir -p ~/linux/axelard_${{ matrix.version }}-1_arm/DEBIAN/    
          
      - name: Get binaries
        run: |
          wget -O ~/linux/axelard_${{ matrix.version }}-1_amd64/usr/bin/axelard --no-check-certificate https://github.com/axelarnetwork/axelar-core/releases/download/v${{ matrix.version }}/axelard-linux-amd64-v${{ matrix.version }}
          chmod 755 ~/linux/axelard_${{ matrix.version }}-1_amd64/usr/bin/axelard
          wget -O ~/linux/axelard_${{ matrix.version }}-1_arm64/usr/bin/axelard --no-check-certificate https://github.com/axelarnetwork/axelar-core/releases/download/v${{ matrix.version }}/axelard-linux-arm64-v${{ matrix.version }}
          chmod 755 ~/linux/axelard_${{ matrix.version }}-1_arm64/usr/bin/axelard
          wget -O ~/linux/axelard_${{ matrix.version }}-1_arm/usr/bin/axelard --no-check-certificate https://github.com/axelarnetwork/axelar-core/releases/download/v${{ matrix.version }}/axelard-linux-arm-v${{ matrix.version }}
          chmod 755 ~/linux/axelard_${{ matrix.version }}-1_arm/usr/bin/axelard  
          
      - name: Create control files
        run: |
          echo "Package: axelard
          Version: ${{ matrix.version }}
          Maintainer: axelar <devops@axelar.network>
          Architecture: amd64
          Homepage: https://axelar.network
          Description: axelard binary for Linux amd64" \
          > ~/linux/axelard_${{ matrix.version }}-1_amd64/DEBIAN/control
          echo "Package: axelard
          Version: ${{ matrix.version }}
          Maintainer: axelar <devops@axelar.network>
          Architecture: arm64
          Homepage: https://axelar.network
          Description: axelard binary for Linux arm64" \
          > ~/linux/axelard_${{ matrix.version }}-1_arm64/DEBIAN/control
          echo "Package: axelard
          Version: ${{ matrix.version }}
          Maintainer: axelar <devops@axelar.network>
          Architecture: arm
          Homepage: https://axelar.network
          Description: axelard binary for Linux arm" \
          > ~/linux/axelard_${{ matrix.version }}-1_arm/DEBIAN/control
          
      - name: Build the packages
        run: |
          dpkg --build ~/linux/axelard_${{ matrix.version }}-1_amd64
          dpkg --build ~/linux/axelard_${{ matrix.version }}-1_arm64
          dpkg --build ~/linux/axelard_${{ matrix.version }}-1_arm
          
      - name: Check the packages
        run: |
          dpkg-deb --info ~/linux/axelard_${{ matrix.version }}-1_amd64.deb
          dpkg-deb --contents ~/linux/axelard_${{ matrix.version }}-1_amd64.deb
          dpkg-deb --info ~/linux/axelard_${{ matrix.version }}-1_arm64.deb
          dpkg-deb --contents ~/linux/axelard_${{ matrix.version }}-1_arm64.deb
          dpkg-deb --info ~/linux/axelard_${{ matrix.version }}-1_arm.deb
          dpkg-deb --contents ~/linux/axelard_${{ matrix.version }}-1_arm.deb
          
      - name: Copy binaries in apt repo
        run: | 
          mkdir -p ~/axelard/apt-repo/pool/main/
          cp ~/linux/*.deb ~/axelard/apt-repo/pool/main/.

      - name: Generate Packages files
        run: | 
          mkdir -p ~/axelard/apt-repo/dists/stable/main/binary-amd64
          mkdir -p ~/axelard/apt-repo/dists/stable/main/binary-arm64
          mkdir -p ~/axelard/apt-repo/dists/stable/main/binary-arm
          cd ~/axelard/apt-repo
          dpkg-scanpackages -m --arch amd64 pool/ > dists/stable/main/binary-amd64/Packages
          dpkg-scanpackages -m --arch arm64 pool/ > dists/stable/main/binary-arm64/Packages
          dpkg-scanpackages -m --arch arm pool/ > dists/stable/main/binary-arm/Packages
          cat dists/stable/main/binary-amd64/Packages 
          cat dists/stable/main/binary-arm64/Packages 
          cat dists/stable/main/binary-arm/Packages 
          cat dists/stable/main/binary-amd64/Packages | gzip -9 > dists/stable/main/binary-amd64/Packages.gz
          cat dists/stable/main/binary-arm64/Packages | gzip -9 > dists/stable/main/binary-arm64/Packages.gz
          cat dists/stable/main/binary-arm/Packages | gzip -9 > dists/stable/main/binary-arm/Packages.gz
          
      - name: Generate Release file
        run: |
          echo '#!/bin/sh
          set -e
          do_hash() {
               HASH_NAME=$1
               HASH_CMD=$2
               echo "${HASH_NAME}:"
               for f in $(find -type f); do
                  f=$(echo $f | cut -c3-) # remove ./ prefix
                  if [ "$f" = "Release" ]; then
                      continue
                  fi
                  echo " $(${HASH_CMD} ${f}  | cut -d" " -f1) $(wc -c $f)"
               done
          }
          cat << EOF
          Origin: Axelard repository
          Label: axelard
          Suite: stable
          Codename: stable
          Version: VERSION
          Architectures: amd64 arm64 arm
          Components: main
          Description: Axelard repository
          Date: $(date -Ru)
          EOF
          do_hash "MD5Sum" "md5sum"
          do_hash "SHA1" "sha1sum"
          do_hash "SHA256" "sha256sum"' > ~/axelard/generate-release.sh && chmod +x ~/axelard/generate-release.sh
          sed -i "s/VERSION/0.31.2/g" ~/axelard/generate-release.sh
          cd ~/axelard/apt-repo/dists/stable
          ~/axelard/generate-release.sh > Release
          cat ~/axelard/apt-repo/dists/stable/Release

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v4
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: GPG sign apt repo
        continue-on-error: true
        run: |
          cat ~/axelard/apt-repo/dists/stable/Release | gpg --default-key 5D9FFADEED11FA5D -abs > ~/axelard/apt-repo/dists/stable/Release.gpg

      - name: Upload to S3
        continue-on-error: true
        run: |
          cd ~/
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static --key axelard/apt-repo/dists/stable/main/binary-amd64/Packages.gz --body axelard/apt-repo/dists/stable/main/binary-amd64/Packages.gz
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/main/binary-arm64/Packages.gz --body axelard/apt-repo/dists/stable/main/binary-arm64/Packages.gz
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/main/binary-arm/Packages.gz --body axelard/apt-repo/dists/stable/main/binary-arm/Packages.gz
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static --key axelard/apt-repo/dists/stable/main/binary-amd64/Packages --body axelard/apt-repo/dists/stable/main/binary-amd64/Packages
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/main/binary-arm64/Packages --body axelard/apt-repo/dists/stable/main/binary-arm64/Packages
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/main/binary-arm/Packages --body axelard/apt-repo/dists/stable/main/binary-arm/Packages
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/Release --body axelard/apt-repo/dists/stable/Release
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/Release.gpg --body axelard/apt-repo/dists/stable/Release.gpg
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/pool/main/axelard_${{ matrix.version }}-1_amd64.deb --body axelard/apt-repo/pool/main/axelard_${{ matrix.version }}-1_amd64.deb
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/pool/main/axelard_${{ matrix.version }}-1_arm64.deb --body axelard/apt-repo/pool/main/axelard_${{ matrix.version }}-1_arm64.deb
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/pool/main/axelard_${{ matrix.version }}-1_arm.deb --body axelard/apt-repo/pool/main/axelard_${{ matrix.version }}-1_arm.deb

      - name: Get GPG public key
        continue-on-error: true
        run: |
          curl https://keybase.io/axelardev/pgp_keys.asc | gpg --import
          curl https://keybase.io/axelardev/pgp_keys.asc | sudo apt-key add -
 
      - name: Install axelard from remote apt repo
        continue-on-error: true
        run: |
          echo "deb [arch=amd64] http://static.axelar.network/axelard/apt-repo stable main" | sudo tee /etc/apt/sources.list.d/axelar.list
          sudo apt-get clean
          sudo apt-get update 
          sudo apt-get install 
 
      - name: Test axelard
        continue-on-error: true
        run: |
          axelard version
          which axelard