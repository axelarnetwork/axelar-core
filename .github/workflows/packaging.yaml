name: Package linux binaries

on:
  workflow_dispatch:
    inputs:
      tag:
        description: Github tag vx.x.x
        required: true
        default: latest

jobs:
  package-binaries:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04]
        arch: [amd64]

    permissions:
      contents: write
      packages: write
      id-token: write

    steps:

      - name: Configure AWS credentials
        run: |
          cd $HOME; mkdir ~/.aws; touch ~/.aws/credentials; touch ~/.aws/config
          echo "[default]
          aws_access_key_id = ${{ secrets.AWS_ACCESS_KEY_ID_CF }}
          aws_secret_access_key = ${{ secrets.AWS_SECRET_ACCESS_KEY_CF }}" > ~/.aws/credentials
          echo "[default]
          region=auto
          output=json"  > ~/.aws/config
          
      - name: Validate tag
        env:
          SEMVER: ${{ github.event.inputs.tag }}
        run: |
          if [[ $SEMVER =~ v[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3} ]]; then echo "Tag is okay" && exit 0; else echo "invalid tag" && exit 1; fi
          aws s3 ls s3://axelar-releases/axelard/"$SEMVER" && echo "tag already exists, use a new one" && exit 1

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: '0'
          submodules: recursive

      - name: Install prerequisites
        run: |
          sudo apt-get install -y gcc dpkg-dev gpg
      - name: Create folder structures for Linux
        env:
          SEMVER: ${{ github.event.inputs.tag }}
        run: |
          VER=$(echo $SEMVER | tr -d 'v')
          mkdir -p ~/linux/axelard_$VER-1_amd64/usr/bin/
          mkdir -p ~/linux/axelard_$VER-1_amd64/DEBIAN/
          mkdir -p ~/linux/axelard_$VER-1_arm64/usr/bin/
          mkdir -p ~/linux/axelard_$VER-1_arm64/DEBIAN/
          mkdir -p ~/linux/axelard_$VER-1_arm/usr/bin/
          mkdir -p ~/linux/axelard_$VER-1_arm/DEBIAN/    
          
      - name: Get binaries
        env:
          SEMVER: ${{ github.event.inputs.tag }}
        run: |
          VER=$(echo $SEMVER | tr -d 'v')
          wget -O ~/linux/axelard_$VER-1_amd64/usr/bin/axelard --no-check-certificate https://github.com/axelarnetwork/axelar-core/releases/download/v0.31.3/axelard-linux-amd64-v0.31.3
          chmod 755 ~/linux/axelard_$VER-1_amd64/usr/bin/axelard
          wget -O ~/linux/axelard_$VER-1_arm64/usr/bin/axelard --no-check-certificate https://github.com/axelarnetwork/axelar-core/releases/download/v0.31.3/axelard-linux-arm64-v0.31.3
          chmod 755 ~/linux/axelard_$VER-1_arm64/usr/bin/axelard
          wget -O ~/linux/axelard_$VER-1_arm/usr/bin/axelard --no-check-certificate https://github.com/axelarnetwork/axelar-core/releases/download/v0.31.3/axelard-linux-arm-v0.31.3
          chmod 755 ~/linux/axelard_$VER-1_arm/usr/bin/axelard  
          
      - name: Create control files
        env:
          SEMVER: ${{ github.event.inputs.tag }}
        run: |
          VER=$(echo $SEMVER | tr -d 'v')
          echo "Package: axelard
          Version: $VER
          Maintainer: axelar <devops@axelar.network>
          Architecture: amd64
          Homepage: https://axelar.network
          Description: axelard binary for Linux amd64" \
          > ~/linux/axelard_$VER-1_amd64/DEBIAN/control
          echo "Package: axelard
          Version: $VER
          Maintainer: axelar <devops@axelar.network>
          Architecture: arm64
          Homepage: https://axelar.network
          Description: axelard binary for Linux arm64" \
          > ~/linux/axelard_$VER-1_arm64/DEBIAN/control
          echo "Package: axelard
          Version: $VER
          Maintainer: axelar <devops@axelar.network>
          Architecture: arm
          Homepage: https://axelar.network
          Description: axelard binary for Linux arm" \
          > ~/linux/axelard_$VER-1_arm/DEBIAN/control
          
      - name: Build the packages
        env:
          SEMVER: ${{ github.event.inputs.tag }}
        run: |
          VER=$(echo $SEMVER | tr -d 'v')
          dpkg --build ~/linux/axelard_$VER-1_amd64
          dpkg --build ~/linux/axelard_$VER-1_arm64
          dpkg --build ~/linux/axelard_$VER-1_arm
          
      - name: Check the packages
        env:
          SEMVER: ${{ github.event.inputs.tag }}
        run: |
          VER=$(echo $SEMVER | tr -d 'v')
          dpkg-deb --info ~/linux/axelard_$VER-1_amd64.deb
          dpkg-deb --contents ~/linux/axelard_$VER-1_amd64.deb
          dpkg-deb --info ~/linux/axelard_$VER-1_arm64.deb
          dpkg-deb --contents ~/linux/axelard_$VER-1_arm64.deb
          dpkg-deb --info ~/linux/axelard_$VER-1_arm.deb
          dpkg-deb --contents ~/linux/axelard_$VER-1_arm.deb
          
      - name: Copy binaries in apt repo
        run: | 
          mkdir -p ~/axelard/apt-repo/pool/main/
          cp ~/linux/*.deb ~/axelard/apt-repo/pool/main/.

      - name: Generate Packages files
        run: | 
          mkdir -p ~/axelard/apt-repo/dists/stable/main/binary-amd64
          mkdir -p ~/axelard/apt-repo/dists/stable/main/binary-arm64
          mkdir -p ~/axelard/apt-repo/dists/stable/main/binary-arm
          cd ~/axelard/apt-repo
          dpkg-scanpackages -m --arch amd64 pool/ > dists/stable/main/binary-amd64/Packages
          dpkg-scanpackages -m --arch arm64 pool/ > dists/stable/main/binary-arm64/Packages
          dpkg-scanpackages -m --arch arm pool/ > dists/stable/main/binary-arm/Packages
          cat dists/stable/main/binary-amd64/Packages 
          cat dists/stable/main/binary-arm64/Packages 
          cat dists/stable/main/binary-arm/Packages 
          cat dists/stable/main/binary-amd64/Packages | gzip -9 > dists/stable/main/binary-amd64/Packages.gz
          cat dists/stable/main/binary-arm64/Packages | gzip -9 > dists/stable/main/binary-arm64/Packages.gz
          cat dists/stable/main/binary-arm/Packages | gzip -9 > dists/stable/main/binary-arm/Packages.gz
          
      - name: Generate Release file
        env:
          SEMVER: ${{ github.event.inputs.tag }}
        run: |
          VER=$(echo $SEMVER | tr -d 'v')
          echo '#!/bin/sh
          set -e
          do_hash() {
               HASH_NAME=$1
               HASH_CMD=$2
               echo "${HASH_NAME}:"
               for f in $(find -type f); do
                  f=$(echo $f | cut -c3-) # remove ./ prefix
                  if [ "$f" = "Release" ]; then
                      continue
                  fi
                  echo " $(${HASH_CMD} ${f}  | cut -d" " -f1) $(wc -c $f)"
               done
          }
          cat << EOF
          Origin: Axelard repository
          Label: axelard
          Suite: stable
          Codename: stable
          Version: VERSION
          Architectures: amd64 arm64 arm
          Components: main
          Description: Axelard repository
          Date: $(date -Ru)
          EOF
          do_hash "MD5Sum" "md5sum"
          do_hash "SHA1" "sha1sum"
          do_hash "SHA256" "sha256sum"' > ~/axelard/generate-release.sh && chmod +x ~/axelard/generate-release.sh
          sed -i "s/VERSION/$VER/g" ~/axelard/generate-release.sh
          cd ~/axelard/apt-repo/dists/stable
          ~/axelard/generate-release.sh > Release
          cat ~/axelard/apt-repo/dists/stable/Release
          
      - name: Upload to S3
        env:
          SEMVER: ${{ github.event.inputs.tag }}
        run: |
          VER=$(echo $SEMVER | tr -d 'v')
          cd ~/
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static --key axelard/apt-repo/dists/stable/main/binary-amd64/Packages.gz --body axelard/apt-repo/dists/stable/main/binary-amd64/Packages.gz
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/main/binary-arm64/Packages.gz --body axelard/apt-repo/dists/stable/main/binary-arm64/Packages.gz
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/main/binary-arm/Packages.gz --body axelard/apt-repo/dists/stable/main/binary-arm/Packages.gz
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static --key axelard/apt-repo/dists/stable/main/binary-amd64/Packages --body axelard/apt-repo/dists/stable/main/binary-amd64/Packages
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/main/binary-arm64/Packages --body axelard/apt-repo/dists/stable/main/binary-arm64/Packages
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/main/binary-arm/Packages --body axelard/apt-repo/dists/stable/main/binary-arm/Packages
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/dists/stable/Release --body axelard/apt-repo/dists/stable/Release
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/pool/main/axelard_$VER-1_amd64.deb --body axelard/apt-repo/pool/main/axelard_$VER-1_amd64.deb
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/pool/main/axelard_$VER-1_arm64.deb --body axelard/apt-repo/pool/main/axelard_$VER-1_arm64.deb
          aws s3api put-object --endpoint-url ${{ secrets.S3_BIN }} --bucket axelar-static  --key axelard/apt-repo/pool/main/axelard_$VER-1_arm.deb --body axelard/apt-repo/pool/main/axelard_$VER-1_arm.deb
 
      - name: Install axelard from remote apt repo
        run: |
          echo "deb [arch=amd64] http://static.axelar.network/axelard/apt-repo stable main" | sudo tee /etc/apt/sources.list.d/axelar.list
          sudo apt-get clean
          sudo apt-get update --allow-insecure-repositories
          sudo apt-get install axelard --allow-unauthenticated
 
      - name: Test axelard
        run: |
          axelard version
          which axelard