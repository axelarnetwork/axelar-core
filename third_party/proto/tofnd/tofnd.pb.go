// File copied from golang tofnd with minor tweaks

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: third_party/proto/tofnd/tofnd.proto

package tofnd

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type MessageOut_CriminalList_Criminal_CrimeType int32

const (
	MessageOut_CriminalList_Criminal_MALICIOUS     MessageOut_CriminalList_Criminal_CrimeType = 0
	MessageOut_CriminalList_Criminal_NON_MALICIOUS MessageOut_CriminalList_Criminal_CrimeType = 1
)

// Enum value maps for MessageOut_CriminalList_Criminal_CrimeType.
var (
	MessageOut_CriminalList_Criminal_CrimeType_name = map[int32]string{
		0: "MALICIOUS",
		1: "NON_MALICIOUS",
	}
	MessageOut_CriminalList_Criminal_CrimeType_value = map[string]int32{
		"MALICIOUS":     0,
		"NON_MALICIOUS": 1,
	}
)

func (x MessageOut_CriminalList_Criminal_CrimeType) Enum() *MessageOut_CriminalList_Criminal_CrimeType {
	p := new(MessageOut_CriminalList_Criminal_CrimeType)
	*p = x
	return p
}

func (x MessageOut_CriminalList_Criminal_CrimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageOut_CriminalList_Criminal_CrimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_third_party_proto_tofnd_tofnd_proto_enumTypes[0].Descriptor()
}

func (MessageOut_CriminalList_Criminal_CrimeType) Type() protoreflect.EnumType {
	return &file_third_party_proto_tofnd_tofnd_proto_enumTypes[0]
}

func (x MessageOut_CriminalList_Criminal_CrimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageOut_CriminalList_Criminal_CrimeType.Descriptor instead.
func (MessageOut_CriminalList_Criminal_CrimeType) EnumDescriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{1, 1, 0, 0}
}

type MessageIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*MessageIn_KeygenInit
	//	*MessageIn_SignInit
	//	*MessageIn_Traffic
	Data isMessageIn_Data `protobuf_oneof:"data"`
}

func (x *MessageIn) Reset() {
	*x = MessageIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageIn) ProtoMessage() {}

func (x *MessageIn) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageIn.ProtoReflect.Descriptor instead.
func (*MessageIn) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{0}
}

func (m *MessageIn) GetData() isMessageIn_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *MessageIn) GetKeygenInit() *KeygenInit {
	if x, ok := x.GetData().(*MessageIn_KeygenInit); ok {
		return x.KeygenInit
	}
	return nil
}

func (x *MessageIn) GetSignInit() *SignInit {
	if x, ok := x.GetData().(*MessageIn_SignInit); ok {
		return x.SignInit
	}
	return nil
}

func (x *MessageIn) GetTraffic() *TrafficIn {
	if x, ok := x.GetData().(*MessageIn_Traffic); ok {
		return x.Traffic
	}
	return nil
}

type isMessageIn_Data interface {
	isMessageIn_Data()
}

type MessageIn_KeygenInit struct {
	KeygenInit *KeygenInit `protobuf:"bytes,1,opt,name=keygen_init,json=keygenInit,proto3,oneof"` // first message only, Keygen
}

type MessageIn_SignInit struct {
	SignInit *SignInit `protobuf:"bytes,2,opt,name=sign_init,json=signInit,proto3,oneof"` // first message only, Sign
}

type MessageIn_Traffic struct {
	Traffic *TrafficIn `protobuf:"bytes,3,opt,name=traffic,proto3,oneof"` // all subsequent messages
}

func (*MessageIn_KeygenInit) isMessageIn_Data() {}

func (*MessageIn_SignInit) isMessageIn_Data() {}

func (*MessageIn_Traffic) isMessageIn_Data() {}

type MessageOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*MessageOut_Traffic
	//	*MessageOut_KeygenResult
	//	*MessageOut_SignResult_
	Data isMessageOut_Data `protobuf_oneof:"data"`
}

func (x *MessageOut) Reset() {
	*x = MessageOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOut) ProtoMessage() {}

func (x *MessageOut) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOut.ProtoReflect.Descriptor instead.
func (*MessageOut) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{1}
}

func (m *MessageOut) GetData() isMessageOut_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *MessageOut) GetTraffic() *TrafficOut {
	if x, ok := x.GetData().(*MessageOut_Traffic); ok {
		return x.Traffic
	}
	return nil
}

func (x *MessageOut) GetKeygenResult() []byte {
	if x, ok := x.GetData().(*MessageOut_KeygenResult); ok {
		return x.KeygenResult
	}
	return nil
}

func (x *MessageOut) GetSignResult() *MessageOut_SignResult {
	if x, ok := x.GetData().(*MessageOut_SignResult_); ok {
		return x.SignResult
	}
	return nil
}

type isMessageOut_Data interface {
	isMessageOut_Data()
}

type MessageOut_Traffic struct {
	Traffic *TrafficOut `protobuf:"bytes,1,opt,name=traffic,proto3,oneof"` // all but final message
}

type MessageOut_KeygenResult struct {
	KeygenResult []byte `protobuf:"bytes,2,opt,name=keygen_result,json=keygenResult,proto3,oneof"` // final message only, Keygen
}

type MessageOut_SignResult_ struct {
	SignResult *MessageOut_SignResult `protobuf:"bytes,3,opt,name=sign_result,json=signResult,proto3,oneof"` // final message only, Sign
}

func (*MessageOut_Traffic) isMessageOut_Data() {}

func (*MessageOut_KeygenResult) isMessageOut_Data() {}

func (*MessageOut_SignResult_) isMessageOut_Data() {}

type TrafficIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromPartyUid string `protobuf:"bytes,1,opt,name=from_party_uid,json=fromPartyUid,proto3" json:"from_party_uid,omitempty"`
	Payload      []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	IsBroadcast  bool   `protobuf:"varint,3,opt,name=is_broadcast,json=isBroadcast,proto3" json:"is_broadcast,omitempty"`
}

func (x *TrafficIn) Reset() {
	*x = TrafficIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficIn) ProtoMessage() {}

func (x *TrafficIn) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficIn.ProtoReflect.Descriptor instead.
func (*TrafficIn) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{2}
}

func (x *TrafficIn) GetFromPartyUid() string {
	if x != nil {
		return x.FromPartyUid
	}
	return ""
}

func (x *TrafficIn) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TrafficIn) GetIsBroadcast() bool {
	if x != nil {
		return x.IsBroadcast
	}
	return false
}

type TrafficOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ToPartyUid  string `protobuf:"bytes,1,opt,name=to_party_uid,json=toPartyUid,proto3" json:"to_party_uid,omitempty"`
	Payload     []byte `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	IsBroadcast bool   `protobuf:"varint,3,opt,name=is_broadcast,json=isBroadcast,proto3" json:"is_broadcast,omitempty"`
}

func (x *TrafficOut) Reset() {
	*x = TrafficOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrafficOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrafficOut) ProtoMessage() {}

func (x *TrafficOut) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrafficOut.ProtoReflect.Descriptor instead.
func (*TrafficOut) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{3}
}

func (x *TrafficOut) GetToPartyUid() string {
	if x != nil {
		return x.ToPartyUid
	}
	return ""
}

func (x *TrafficOut) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *TrafficOut) GetIsBroadcast() bool {
	if x != nil {
		return x.IsBroadcast
	}
	return false
}

type KeygenInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewKeyUid        string   `protobuf:"bytes,1,opt,name=new_key_uid,json=newKeyUid,proto3" json:"new_key_uid,omitempty"`
	PartyUids        []string `protobuf:"bytes,2,rep,name=party_uids,json=partyUids,proto3" json:"party_uids,omitempty"`
	PartyShareCounts []uint32 `protobuf:"varint,5,rep,packed,name=party_share_counts,json=partyShareCounts,proto3" json:"party_share_counts,omitempty"`
	MyPartyIndex     int32    `protobuf:"varint,3,opt,name=my_party_index,json=myPartyIndex,proto3" json:"my_party_index,omitempty"` // parties[my_party_index] belongs to the server
	Threshold        int32    `protobuf:"varint,4,opt,name=threshold,proto3" json:"threshold,omitempty"`
}

func (x *KeygenInit) Reset() {
	*x = KeygenInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeygenInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeygenInit) ProtoMessage() {}

func (x *KeygenInit) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeygenInit.ProtoReflect.Descriptor instead.
func (*KeygenInit) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{4}
}

func (x *KeygenInit) GetNewKeyUid() string {
	if x != nil {
		return x.NewKeyUid
	}
	return ""
}

func (x *KeygenInit) GetPartyUids() []string {
	if x != nil {
		return x.PartyUids
	}
	return nil
}

func (x *KeygenInit) GetPartyShareCounts() []uint32 {
	if x != nil {
		return x.PartyShareCounts
	}
	return nil
}

func (x *KeygenInit) GetMyPartyIndex() int32 {
	if x != nil {
		return x.MyPartyIndex
	}
	return 0
}

func (x *KeygenInit) GetThreshold() int32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

type SignInit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NewSigUid     string   `protobuf:"bytes,1,opt,name=new_sig_uid,json=newSigUid,proto3" json:"new_sig_uid,omitempty"`
	KeyUid        string   `protobuf:"bytes,2,opt,name=key_uid,json=keyUid,proto3" json:"key_uid,omitempty"`
	PartyUids     []string `protobuf:"bytes,3,rep,name=party_uids,json=partyUids,proto3" json:"party_uids,omitempty"` // TODO replace this with a subset of indices?
	MessageToSign []byte   `protobuf:"bytes,4,opt,name=message_to_sign,json=messageToSign,proto3" json:"message_to_sign,omitempty"`
}

func (x *SignInit) Reset() {
	*x = SignInit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignInit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignInit) ProtoMessage() {}

func (x *SignInit) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignInit.ProtoReflect.Descriptor instead.
func (*SignInit) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{5}
}

func (x *SignInit) GetNewSigUid() string {
	if x != nil {
		return x.NewSigUid
	}
	return ""
}

func (x *SignInit) GetKeyUid() string {
	if x != nil {
		return x.KeyUid
	}
	return ""
}

func (x *SignInit) GetPartyUids() []string {
	if x != nil {
		return x.PartyUids
	}
	return nil
}

func (x *SignInit) GetMessageToSign() []byte {
	if x != nil {
		return x.MessageToSign
	}
	return nil
}

type MessageOut_SignResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to SignResultData:
	//	*MessageOut_SignResult_Signature
	//	*MessageOut_SignResult_Criminals
	SignResultData isMessageOut_SignResult_SignResultData `protobuf_oneof:"sign_result_data"`
}

func (x *MessageOut_SignResult) Reset() {
	*x = MessageOut_SignResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOut_SignResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOut_SignResult) ProtoMessage() {}

func (x *MessageOut_SignResult) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOut_SignResult.ProtoReflect.Descriptor instead.
func (*MessageOut_SignResult) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{1, 0}
}

func (m *MessageOut_SignResult) GetSignResultData() isMessageOut_SignResult_SignResultData {
	if m != nil {
		return m.SignResultData
	}
	return nil
}

func (x *MessageOut_SignResult) GetSignature() []byte {
	if x, ok := x.GetSignResultData().(*MessageOut_SignResult_Signature); ok {
		return x.Signature
	}
	return nil
}

func (x *MessageOut_SignResult) GetCriminals() *MessageOut_CriminalList {
	if x, ok := x.GetSignResultData().(*MessageOut_SignResult_Criminals); ok {
		return x.Criminals
	}
	return nil
}

type isMessageOut_SignResult_SignResultData interface {
	isMessageOut_SignResult_SignResultData()
}

type MessageOut_SignResult_Signature struct {
	Signature []byte `protobuf:"bytes,1,opt,name=signature,proto3,oneof"`
}

type MessageOut_SignResult_Criminals struct {
	Criminals *MessageOut_CriminalList `protobuf:"bytes,2,opt,name=criminals,proto3,oneof"`
}

func (*MessageOut_SignResult_Signature) isMessageOut_SignResult_SignResultData() {}

func (*MessageOut_SignResult_Criminals) isMessageOut_SignResult_SignResultData() {}

type MessageOut_CriminalList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Criminals []*MessageOut_CriminalList_Criminal `protobuf:"bytes,1,rep,name=criminals,proto3" json:"criminals,omitempty"`
}

func (x *MessageOut_CriminalList) Reset() {
	*x = MessageOut_CriminalList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOut_CriminalList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOut_CriminalList) ProtoMessage() {}

func (x *MessageOut_CriminalList) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOut_CriminalList.ProtoReflect.Descriptor instead.
func (*MessageOut_CriminalList) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{1, 1}
}

func (x *MessageOut_CriminalList) GetCriminals() []*MessageOut_CriminalList_Criminal {
	if x != nil {
		return x.Criminals
	}
	return nil
}

type MessageOut_CriminalList_Criminal struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PartyUid  string                                     `protobuf:"bytes,1,opt,name=party_uid,json=partyUid,proto3" json:"party_uid,omitempty"`
	CrimeType MessageOut_CriminalList_Criminal_CrimeType `protobuf:"varint,2,opt,name=crime_type,json=crimeType,proto3,enum=tofnd.MessageOut_CriminalList_Criminal_CrimeType" json:"crime_type,omitempty"`
}

func (x *MessageOut_CriminalList_Criminal) Reset() {
	*x = MessageOut_CriminalList_Criminal{}
	if protoimpl.UnsafeEnabled {
		mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageOut_CriminalList_Criminal) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageOut_CriminalList_Criminal) ProtoMessage() {}

func (x *MessageOut_CriminalList_Criminal) ProtoReflect() protoreflect.Message {
	mi := &file_third_party_proto_tofnd_tofnd_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageOut_CriminalList_Criminal.ProtoReflect.Descriptor instead.
func (*MessageOut_CriminalList_Criminal) Descriptor() ([]byte, []int) {
	return file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP(), []int{1, 1, 0}
}

func (x *MessageOut_CriminalList_Criminal) GetPartyUid() string {
	if x != nil {
		return x.PartyUid
	}
	return ""
}

func (x *MessageOut_CriminalList_Criminal) GetCrimeType() MessageOut_CriminalList_Criminal_CrimeType {
	if x != nil {
		return x.CrimeType
	}
	return MessageOut_CriminalList_Criminal_MALICIOUS
}

var File_third_party_proto_tofnd_tofnd_proto protoreflect.FileDescriptor

var file_third_party_proto_tofnd_tofnd_proto_rawDesc = []byte{
	0x0a, 0x23, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2f, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x22, 0xa7, 0x01, 0x0a,
	0x09, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x12, 0x34, 0x0a, 0x0b, 0x6b, 0x65,
	0x79, 0x67, 0x65, 0x6e, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x4b, 0x65, 0x79, 0x67, 0x65, 0x6e, 0x49, 0x6e,
	0x69, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x67, 0x65, 0x6e, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x2e, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x69, 0x74, 0x48, 0x00, 0x52, 0x08, 0x73, 0x69, 0x67, 0x6e, 0x49, 0x6e, 0x69, 0x74,
	0x12, 0x2c, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x10, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x54, 0x72, 0x61, 0x66, 0x66, 0x69,
	0x63, 0x49, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x42, 0x06,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xb1, 0x04, 0x0a, 0x0a, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x4f, 0x75, 0x74, 0x12, 0x2d, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x66, 0x66, 0x69, 0x63,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x54,
	0x72, 0x61, 0x66, 0x66, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x48, 0x00, 0x52, 0x07, 0x74, 0x72, 0x61,
	0x66, 0x66, 0x69, 0x63, 0x12, 0x25, 0x0a, 0x0d, 0x6b, 0x65, 0x79, 0x67, 0x65, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x0c, 0x6b,
	0x65, 0x79, 0x67, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x4f, 0x75, 0x74, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00,
	0x52, 0x0a, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x80, 0x01, 0x0a,
	0x0a, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1e, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x63,
	0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75,
	0x74, 0x2e, 0x43, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x63, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x42, 0x12, 0x0a, 0x10, 0x73,
	0x69, 0x67, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x1a,
	0x80, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x12, 0x45, 0x0a, 0x09, 0x63, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x4c,
	0x69, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x09, 0x63, 0x72,
	0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x73, 0x1a, 0xa8, 0x01, 0x0a, 0x08, 0x43, 0x72, 0x69, 0x6d,
	0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x75, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x72, 0x74, 0x79, 0x55, 0x69,
	0x64, 0x12, 0x50, 0x0a, 0x0a, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x31, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61,
	0x6c, 0x4c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x69, 0x6d, 0x69, 0x6e, 0x61, 0x6c, 0x2e, 0x43,
	0x72, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x63, 0x72, 0x69, 0x6d, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x22, 0x2d, 0x0a, 0x09, 0x43, 0x72, 0x69, 0x6d, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x4d, 0x41, 0x4c, 0x49, 0x43, 0x49, 0x4f, 0x55, 0x53, 0x10, 0x00, 0x12,
	0x11, 0x0a, 0x0d, 0x4e, 0x4f, 0x4e, 0x5f, 0x4d, 0x41, 0x4c, 0x49, 0x43, 0x49, 0x4f, 0x55, 0x53,
	0x10, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x6e, 0x0a, 0x09, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x49, 0x6e, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x72, 0x6f, 0x6d, 0x5f,
	0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x62, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69,
	0x73, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x6b, 0x0a, 0x0a, 0x54, 0x72,
	0x61, 0x66, 0x66, 0x69, 0x63, 0x4f, 0x75, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x74, 0x6f, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x74, 0x6f, 0x50, 0x61, 0x72, 0x74, 0x79, 0x55, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6c, 0x6f, 0x61, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64,
	0x63, 0x61, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0xbd, 0x01, 0x0a, 0x0a, 0x4b, 0x65, 0x79, 0x67,
	0x65, 0x6e, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x6b, 0x65,
	0x79, 0x5f, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77,
	0x4b, 0x65, 0x79, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74,
	0x79, 0x55, 0x69, 0x64, 0x73, 0x12, 0x2c, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x10, 0x70, 0x61, 0x72, 0x74, 0x79, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6d, 0x79, 0x5f, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f,
	0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x6d, 0x79, 0x50,
	0x61, 0x72, 0x74, 0x79, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x68,
	0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x8a, 0x01, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e,
	0x49, 0x6e, 0x69, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x6e, 0x65, 0x77, 0x5f, 0x73, 0x69, 0x67, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x65, 0x77, 0x53, 0x69,
	0x67, 0x55, 0x69, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6b, 0x65, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6b, 0x65, 0x79, 0x55, 0x69, 0x64, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x61, 0x72, 0x74, 0x79, 0x5f, 0x75, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x79, 0x55, 0x69, 0x64, 0x73, 0x12, 0x26, 0x0a, 0x0f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x53, 0x69, 0x67, 0x6e, 0x32, 0x6a, 0x0a, 0x04, 0x47, 0x47, 0x32, 0x30, 0x12, 0x31, 0x0a, 0x06,
	0x4b, 0x65, 0x79, 0x67, 0x65, 0x6e, 0x12, 0x10, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x1a, 0x11, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64,
	0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x28, 0x01, 0x30, 0x01, 0x12,
	0x2f, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x10, 0x2e, 0x74, 0x6f, 0x66, 0x6e, 0x64, 0x2e,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x1a, 0x11, 0x2e, 0x74, 0x6f, 0x66, 0x6e,
	0x64, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4f, 0x75, 0x74, 0x28, 0x01, 0x30, 0x01,
	0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x78, 0x65, 0x6c, 0x61, 0x72, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x61, 0x78, 0x65,
	0x6c, 0x61, 0x72, 0x2d, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x74, 0x68, 0x69, 0x72, 0x64, 0x5f, 0x70,
	0x61, 0x72, 0x74, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x74, 0x6f, 0x66, 0x6e, 0x64,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_third_party_proto_tofnd_tofnd_proto_rawDescOnce sync.Once
	file_third_party_proto_tofnd_tofnd_proto_rawDescData = file_third_party_proto_tofnd_tofnd_proto_rawDesc
)

func file_third_party_proto_tofnd_tofnd_proto_rawDescGZIP() []byte {
	file_third_party_proto_tofnd_tofnd_proto_rawDescOnce.Do(func() {
		file_third_party_proto_tofnd_tofnd_proto_rawDescData = protoimpl.X.CompressGZIP(file_third_party_proto_tofnd_tofnd_proto_rawDescData)
	})
	return file_third_party_proto_tofnd_tofnd_proto_rawDescData
}

var file_third_party_proto_tofnd_tofnd_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_third_party_proto_tofnd_tofnd_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_third_party_proto_tofnd_tofnd_proto_goTypes = []interface{}{
	(MessageOut_CriminalList_Criminal_CrimeType)(0), // 0: tofnd.MessageOut.CriminalList.Criminal.CrimeType
	(*MessageIn)(nil),                        // 1: tofnd.MessageIn
	(*MessageOut)(nil),                       // 2: tofnd.MessageOut
	(*TrafficIn)(nil),                        // 3: tofnd.TrafficIn
	(*TrafficOut)(nil),                       // 4: tofnd.TrafficOut
	(*KeygenInit)(nil),                       // 5: tofnd.KeygenInit
	(*SignInit)(nil),                         // 6: tofnd.SignInit
	(*MessageOut_SignResult)(nil),            // 7: tofnd.MessageOut.SignResult
	(*MessageOut_CriminalList)(nil),          // 8: tofnd.MessageOut.CriminalList
	(*MessageOut_CriminalList_Criminal)(nil), // 9: tofnd.MessageOut.CriminalList.Criminal
}
var file_third_party_proto_tofnd_tofnd_proto_depIdxs = []int32{
	5,  // 0: tofnd.MessageIn.keygen_init:type_name -> tofnd.KeygenInit
	6,  // 1: tofnd.MessageIn.sign_init:type_name -> tofnd.SignInit
	3,  // 2: tofnd.MessageIn.traffic:type_name -> tofnd.TrafficIn
	4,  // 3: tofnd.MessageOut.traffic:type_name -> tofnd.TrafficOut
	7,  // 4: tofnd.MessageOut.sign_result:type_name -> tofnd.MessageOut.SignResult
	8,  // 5: tofnd.MessageOut.SignResult.criminals:type_name -> tofnd.MessageOut.CriminalList
	9,  // 6: tofnd.MessageOut.CriminalList.criminals:type_name -> tofnd.MessageOut.CriminalList.Criminal
	0,  // 7: tofnd.MessageOut.CriminalList.Criminal.crime_type:type_name -> tofnd.MessageOut.CriminalList.Criminal.CrimeType
	1,  // 8: tofnd.GG20.Keygen:input_type -> tofnd.MessageIn
	1,  // 9: tofnd.GG20.Sign:input_type -> tofnd.MessageIn
	2,  // 10: tofnd.GG20.Keygen:output_type -> tofnd.MessageOut
	2,  // 11: tofnd.GG20.Sign:output_type -> tofnd.MessageOut
	10, // [10:12] is the sub-list for method output_type
	8,  // [8:10] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_third_party_proto_tofnd_tofnd_proto_init() }
func file_third_party_proto_tofnd_tofnd_proto_init() {
	if File_third_party_proto_tofnd_tofnd_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrafficOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeygenInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignInit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOut_SignResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOut_CriminalList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_third_party_proto_tofnd_tofnd_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageOut_CriminalList_Criminal); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_third_party_proto_tofnd_tofnd_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MessageIn_KeygenInit)(nil),
		(*MessageIn_SignInit)(nil),
		(*MessageIn_Traffic)(nil),
	}
	file_third_party_proto_tofnd_tofnd_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*MessageOut_Traffic)(nil),
		(*MessageOut_KeygenResult)(nil),
		(*MessageOut_SignResult_)(nil),
	}
	file_third_party_proto_tofnd_tofnd_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*MessageOut_SignResult_Signature)(nil),
		(*MessageOut_SignResult_Criminals)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_third_party_proto_tofnd_tofnd_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_third_party_proto_tofnd_tofnd_proto_goTypes,
		DependencyIndexes: file_third_party_proto_tofnd_tofnd_proto_depIdxs,
		EnumInfos:         file_third_party_proto_tofnd_tofnd_proto_enumTypes,
		MessageInfos:      file_third_party_proto_tofnd_tofnd_proto_msgTypes,
	}.Build()
	File_third_party_proto_tofnd_tofnd_proto = out.File
	file_third_party_proto_tofnd_tofnd_proto_rawDesc = nil
	file_third_party_proto_tofnd_tofnd_proto_goTypes = nil
	file_third_party_proto_tofnd_tofnd_proto_depIdxs = nil
}
